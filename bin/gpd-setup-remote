#!/usr/bin/env bash

set -e

my_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# defaults
default_remote_user=$(whoami)
default_bare_repo_root_dir=/home/$default_remote_user/gpdrepos

# approach borrowed from git-stash
dashless=$(basename "$0" | sed -e 's/-/ /')
USAGE="
NAME
    gpd setup-remote - setup git remote on local clone

USAGE
    $dashless -w|--git-work-dir <git-work-dir>
                     -s|--server <server>
                     [-u|--remote-user <remote-user>]
                     [-b|--bare-repo-root-dir <bare-repo-root-dir]
                     [-r|--remote-name <remote-name>]
                     [-p|--project <project>]
                     [-v|--verbose]
                     [-h|--help]

DEFAULTS
    --remote-user: \$(whoami)
    --bare-repo-root-dir: \$HOME/gpdrepos
    --remote-name: derived from --server
    --project: derived from \"origin\" remote found at --git-work-dir

ENVIRONMENT VARIABLES
    GPD_REMOTE_USER: User on DevStack VM to use with git (via ssh)
    GPD_BARE_REPO_ROOT_DIR: Absolute path to dir containing all bare repos on
                            DevStack VM
    GPD_AUTO_REMOTE_NAME_PREFIX: When --remote_name not specified, add this
                                 prefix to remote name derived from --server
    GPD_AUTO_REMOTE_NAME_SUFFIX: When --remote_name not specified, add this
                                 suffix to remote name derived from --server
    GPD_VERBOSE: 1 to show extra output
"

usage() {
    local extra=${1:-""}
    if [[ -n "$extra" ]]; then
        printf "$extra\n"
    fi
    printf "$USAGE\n"
    exit 1
}

while (( $# > 0 )); do
key="$1"
shift

case $key in
    -w|--git-work-dir)
    git_work_dir="$1"
    shift
    ;;
    -s|--server)
    server="$1"
    shift
    ;;
    -b|--bare-repo-root-dir)
    bare_repo_root_dir="$1"
    shift
    ;;
    -r|--remote_name)
    remote_name=$1
    shift
    ;;
    -u|--remote-user)
    user=$1
    shift
    ;;
    -p|--project)
    project=$1
    shift
    ;;
    -v|--verbose)
    verbose=1
    ;;
    -h|--help)
    usage
    ;;
    *)
    usage "ERROR: Unknown option: $key"
    ;;
esac
done

source "$my_dir/../lib/laptop.bash"
#[[ -z $project ]] && usage "ERROR: --project is required"
[[ -z $server ]] && usage "ERROR: --server is required"

git_work_dir="${git_work_dir:-$(pwd)}"
project=${project:-$(project_from_git_work_dir $git_work_dir)}
remote_user=${user:-${GPD_REMOTE_USER:-$default_remote_user}}
bare_repo_root_dir=${bare_repo_root_dir:-${GPD_BARE_REPO_ROOT_DIR:-/home/$remote_user/gpdrepos}}
remote_name=${remote_name:-$(make_remote_name $server)}
verbose=${verbose:-${GPD_VERBOSE}:-0}

if [[ $verbose == 1 ]]; then
    log_info "git_work_dir=$git_work_dir"
    log_info "project=$project"
    log_info "bare_repo_root_dir=$bare_repo_root_dir"
    log_info "remote_name=$remote_name"
    log_info "remote_user=$remote_user"
    log_info "server=$server"
fi

setup_remote $project $git_work_dir $server $remote_user "$bare_repo_root_dir" "$remote_name"

log_info "Created git remote \"$remote_name\""
